#!/usr/bin/env bash
#
# Copyright (c) 2015 Joyent Inc., All rights reserved.
#
# Install Alpine into a directory, modify the installation, then tar it up.
#
export https_proxy=10.45.144.55:3128

if [[ -n "$TRACE" ]]; then
  export PS4='[\D{%FT%TZ}] ${BASH_SOURCE}:${LINENO}: ${FUNCNAME[0]:+${FUNCNAME[0]}(): }'
  set -o xtrace
fi

set -euo pipefail
IFS=$'\n\t'

GUESTTOOLS=guesttools
BUILD_DATE=$(date +%Y%m%d)

export PATH=$PATH:/sbin:/bin

usage() {
cat <<EOF

Install and modify Void in a given directory in a given directory using a given mirror

Usage:
  $0 -a <ARCH> -x <XBPS_TOOLS> -d <INSTALL_DIR> -m <MIRROR> -i <IMAGE_NAME> -p <NAME> -D <DESC> -u <DOCS>

Example:
  $0 -a <x86_64-musl> -x xbps-static-latest.x86_64-musl.tar.xz -d /data/void -m https://alpha.de.repo.voidlinux.org -i void -p "Void Linux" -D "Void 64-bit lx-brand image." -u https://docs.joyent.com/images/container-native-linux

OPTIONS:
  -x The required xbps-tools-static package (e.g. xbps-static-latest.x86_64-musl.tar.xz)
  -d A path to the install directory
  -m A URL for the desired archive mirror
  -i The name of the image. This is used for naming the tarball.
  -p The proper name of the image. Use quotes. This is used in the MOTD and /etc/product file.
  -D A description for the image. This is used in the image manifest and the /etc/product file.
  -u A URL to the image docs [optional]
  -h Show this message

EOF
}

ARCH=
XBPS_TOOLS=
INSTALL_DIR=
MIRROR=
IMAGE_NAME=
NAME=
DESC=
DOCS=

while getopts "ha:x:d:m:i:p:D:u:" OPTION
do
	case $OPTION in
		h)
			usage
			exit
			;;
		a)
			ARCH=${OPTARG}
			;;
		x)
			XBPS_TOOLS=${OPTARG}
			;;
		d)
			INSTALL_DIR=${OPTARG%/}
			;;
		m)
			MIRROR=${OPTARG%/}
			;;
		i)
			IMAGE_NAME=${OPTARG}
			;;
		p)
			NAME=${OPTARG}
			;;
		D)
			DESC=${OPTARG}
			;;
		u)
			DOCS=${OPTARG}
			;;
		\?)
			usage
			exit
			;;
	esac
done

if [[ $# -eq 0 ]]; then
	usage
	exit 1
fi

if [[ -z ${ARCH} ]]; then
	echo "Error: missing arch (-a) value x86_64 || x86_64-musl"
	exit 1
fi

if [[ -z ${XBPS_TOOLS} ]]; then
	echo "Error: missing void-tools-static package (-x) value"
	exit 1
fi

if [[ ! -e ${INSTALL_DIR} ]] ; then
	echo "Directory $INSTALL_DIR not found"
	exit 1
fi

if [[ -z ${INSTALL_DIR} ]]; then
	echo "Error: missing install directory (-d) value"
	exit 1
fi

if [[ -z ${MIRROR} ]]; then
	echo "Error: missing libc (-m) value"
	exit 1
fi

if [[ -z ${IMAGE_NAME} ]]; then
	echo "Error: missing image name (-i) value"
	exit 1
fi

if [[ -z ${NAME} ]]; then
	echo "Error: missing proper name (-p) value"
	exit 1
fi

TARGET="${IMAGE_NAME}-${BUILD_DATE}.tar.gz"

if [[ -z ${DOCS} ]]; then
	DOCS="https://docs.joyent.com/images/container-native-linux"
fi

echo "==> Installing Void into $INSTALL_DIR"

if [[ -d $INSTALL_DIR ]]; then
	echo "====> Found previous chroot. Deleting and creating a new one."

	if [[ $(mount | grep -c $INSTALL_DIR/proc) -gt 0 ]]; then
		umount $INSTALL_DIR/proc
  fi

	if [[ $(mount | grep -c $INSTALL_DIR/sys) -gt 0 ]]; then
		umount $INSTALL_DIR/sys
	fi

	rm -rf $INSTALL_DIR
	mkdir -p $INSTALL_DIR
fi

echo "===> Getting Void ..."

if [[ ! -d tmp/ ]]; then
	echo "===> creating tmp/ directory"
	mkdir tmp
fi

cd tmp/

export BIN="./usr/bin"


wget -O - ${MIRROR}/static/xbps-static-latest.$(uname -m)-musl.tar.xz | \
   tar Jx

echo "==> Adding void keys"
mkdir -p ${INSTALL_DIR}/var/db/xbps/keys \
   && cp ../keys/* ${INSTALL_DIR}/var/db/xbps/keys/ 

echo "===> Installing Void base from ${MIRROR}"
XBPS_ARCH=${ARCH} ${BIN}/xbps-install.static -yMU \
  --repository=${MIRROR}/current \
  --repository=${MIRROR}/current/musl \
  -r ${INSTALL_DIR} \
  base-minimal \
  bash \
  curl \
  gettext \
  less \
  man \
  openssh \
  tzdata \
  vim \
  wget \
  ncurses \
  iproute2 \
  iputils

echo "==> Setting TZ to UTC"
#chroot $INSTALL_DIR apk add --update tzdata
#cp $INSTALL_DIR/usr/share/zoneinfo/UTC $INSTALL_DIR/etc/localtime
#chroot $INSTALL_DIR apk del --purge tzdata

echo "==> Disabling PasswordAuthentication"
sed -ri s/^#?PasswordAuthentication\ no/PasswordAuthentication\ no/ -i $INSTALL_DIR/etc/ssh/sshd_config
sed -ri s/^#?PasswordAuthentication\ yes/PasswordAuthentication\ no/ -i $INSTALL_DIR/etc/ssh/sshd_config

echo "==> Enabling UsePrivilegeSeparation (default is 'sandbox')"
sed s/UsePrivilegeSeparation\ sandbox/UsePrivilegeSeparation\ yes/ -i $INSTALL_DIR/etc/ssh/sshd_config
sed s/#UsePrivilegeSeparation\ yes/UsePrivilegeSeparation\ yes/ -i $INSTALL_DIR/etc/ssh/sshd_config



echo "==> Creating /etc/motd"
cat << MOTD > $INSTALL_DIR/etc/motd
   __        .                   .
 _|  |_      | .-. .  . .-. :--. |-
|_    _|     ;|   ||  |(.-' |  | |
  |__|   \`--'  \`-' \`;-| \`-' '  ' \`-'
                   /  ;  Instance ($NAME $BUILD_DATE)
                   \`-'   $DOCS

MOTD

echo "==> Creating /etc/product file"
cat << PRODUCT > $INSTALL_DIR/etc/product
Name: Joyent Instance
Image: $NAME $BUILD_DATE
Documentation: $DOCS
Description: $DESC
PRODUCT

touch ${INSTALL_DIR}/etc/void-release

echo "==> Installing Guest tools in $INSTALL_DIR"
echo "====> Running ./install.sh -i $INSTALL_DIR"
(
	cd ../$GUESTTOOLS
	./install.sh -i $INSTALL_DIR
)


echo "==> Saving installation as $TARGET. This may take a few minutes."
tar czf $TARGET --exclude-from=../exclude.txt $INSTALL_DIR/

echo "==> Installation complete!"
echo "==> $TARGET"

exit 0
